// Place your key bindings in this file to override the defaultsauto[]
[
    // ALT-J for LEFT
    {
        "key": "alt+j",
        "command": "cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+j",
        "command": "cursorWordLeft",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "shift+alt+j",
        "command": "cursorLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+j",
        "command": "cursorWordLeftSelect",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },

    // ALT-L for RIGHT
    {
        "key": "alt+l",
        "command": "cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+l",
        "command": "cursorWordRight",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },
    {
        "key": "shift+alt+l",
        "command": "cursorRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+l",
        "command": "cursorWordRightSelect",
        "when": "textInputFocus && !accessibilityModeEnabled"
    },

    // ALT-I for UP
    {
        "key": "alt+i",
        "command": "cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+i",
        "command": "cursorUpSelect",
        "when": "textInputFocus"
    },

    // ALT-K for DOWN
    {
        "key": "alt+k",
        "command": "cursorDown",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+k",
        "command": "cursorDownSelect",
        "when": "textInputFocus"
    },

    // ALT-U for HOME
    {
        "key": "alt+u",
        "command": "cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+u",
        "command": "cursorHomeSelect",
        "when": "textInputFocus"
    },

    // ALT-O for END
    {
        "key": "alt+o",
        "command": "cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+o",
        "command": "cursorEndSelect",
        "when": "textInputFocus"
    },
    // ATL-N for backspace
    {
        "key": "alt+n",
        "command": "deleteLeft",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+n",
        "command": "deleteRight",
        "when": "textInputFocus"
    },

    // ALT+7 for comment line
    {
        "key": "alt+7",
        "command": "-workbench.action.openEditorAtIndex7"
    },
    {
        "key": "alt+7",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+d",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+d",
        "command": "editor.action.addSelectionToPreviousFindMatch"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+y",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+down",
        "command": "-notebook.cell.copyDown",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "alt+m",
        "command": "extension.multiCommand.execute",
        "args": {"sequence": ["lineBreakInsert","cursorDown", "cursorEnd", "cursorHome"]},
        "when": "editorTextFocus && !editorReadonly"
    },
]
